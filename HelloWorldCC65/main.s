;
; File generated by cc65 v 2.19
;
	.fopt		compiler,"cc65 v 2.19"
	.setcpu		"65SC02"
	.smart		on
	.autoimport	on
	.case		on
	.debuginfo	off
	.importzp	sp, sreg, regsave, regbank
	.importzp	tmp1, tmp2, tmp3, tmp4, ptr1, ptr2, ptr3, ptr4
	.macpack	longbranch
	.forceimport	__STARTUP__
	.import		_tgi_static_stddrv
	.import		_tgi_install
	.import		_tgi_init
	.import		_tgi_clear
	.import		_tgi_setcolor
	.import		_tgi_setpalette
	.import		_tgi_getdefpalette
	.import		_tgi_outtextxy
	.import		_tgi_ioctl
	.import		_kbhit
	.import		_cgetc
	.import		_joy_static_stddrv
	.import		_joy_install
	.export		_initialize
	.export		_show_screen
	.export		_main

.segment	"RODATA"

S0002:
	.byte	$48,$65,$6C,$6C,$6F,$2C,$20,$57,$6F,$72,$6C,$64,$21,$00

; ---------------------------------------------------------------
; void __near__ initialize (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_initialize: near

.segment	"CODE"

;
; tgi_install(&tgi_static_stddrv);
;
	lda     #<(_tgi_static_stddrv)
	ldx     #>(_tgi_static_stddrv)
	jsr     _tgi_install
;
; joy_install(&joy_static_stddrv);
;
	lda     #<(_joy_static_stddrv)
	ldx     #>(_joy_static_stddrv)
	jsr     _joy_install
;
; tgi_init();
;
	jsr     _tgi_init
;
; CLI();
;
	cli
;
; while (tgi_busy()) ;
;
L0002:	lda     #$04
	jsr     pusha
	ldx     #$00
	txa
	jsr     _tgi_ioctl
	stx     tmp1
	ora     tmp1
	bne     L0002
;
; tgi_setpalette(tgi_getdefpalette());
;
	jsr     _tgi_getdefpalette
	jsr     _tgi_setpalette
;
; tgi_setcolor(COLOR_WHITE);
;
	lda     #$0F
	jsr     _tgi_setcolor
;
; tgi_setbgcolor(COLOR_BLACK);
;
	lda     #$02
	jsr     pusha
	ldx     #$00
	txa
	jsr     _tgi_ioctl
;
; tgi_clear();
;
	jmp     _tgi_clear

.endproc

; ---------------------------------------------------------------
; void __near__ show_screen (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_show_screen: near

.segment	"CODE"

;
; tgi_clear();
;
	jsr     _tgi_clear
;
; tgi_setcolor(COLOR_WHITE);
;
	lda     #$0F
	jsr     _tgi_setcolor
;
; tgi_outtextxy(20, 48, "Hello, World!");
;
	lda     #$14
	jsr     pusha0
	lda     #$30
	jsr     pusha0
	lda     #<(S0002)
	ldx     #>(S0002)
	jsr     _tgi_outtextxy
;
; tgi_updatedisplay();
;
	lda     #$04
	jsr     pusha
	ldx     #$00
	lda     #$01
	jmp     _tgi_ioctl

.endproc

; ---------------------------------------------------------------
; void __near__ main (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_main: near

.segment	"CODE"

;
; initialize();
;
	jsr     _initialize
;
; if (kbhit())
;
L0002:	jsr     _kbhit
	tax
	beq     L0007
;
; switch (cgetc())
;
	jsr     _cgetc
;
; }
;
	cmp     #$46
	bne     L0007
;
; tgi_flip();
;
	lda     #$01
	jsr     pusha
	ldx     #$00
	txa
	jsr     _tgi_ioctl
;
; if (!tgi_busy())
;
L0007:	lda     #$04
	jsr     pusha
	ldx     #$00
	txa
	jsr     _tgi_ioctl
	stx     tmp1
	ora     tmp1
	bne     L0002
;
; show_screen();
;
	jsr     _show_screen
;
; while (1)
;
	bra     L0002

.endproc

